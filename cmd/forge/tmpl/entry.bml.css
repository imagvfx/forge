// html { filter: grayscale(100%) }

.flexSpacer {
	flex: 1;
}

.pinnedPathLink:hover {
	text-decoration: underline;
}

#pinnedPathDeleteButton {
	border-radius: 0.1rem;
	border: 1px solid #DDD;
	padding: 0 0.1rem;
	font-size: 0.7rem;
	color:#DDD;
	background-color: inherit;
}

#pinnedPathDeleteButton.prepareDrop {
	color: #A22;
	border: 1px solid #A22;
}

.quickSearchLink:hover {
	text-decoration: underline;
}

#quickSearchDeleteButton {
	border-radius: 0.1rem;
	border: 1px solid #DDD;
	padding: 0 0.1rem;
	font-size: 0.7rem;
	color:#DDD;
	background-color: inherit;
}

#quickSearchDeleteButton.prepareDrop {
	color: #A22;
	border: 1px solid #A22;
}

.search-box-left {
	appearance: none;
	-webkit-appearance: none;
	margin: 0;
	box-sizing: content-box;
	height: 1.2rem;
	border: 1px solid #CCC;
	border-radius: 3px 0 0 3px;
	padding: 0.3rem;
	font-size:0.85rem;
}

.search-box-center {
	appearance: none;
	-webkit-appearance: none;
	box-sizing: content-box;
	margin: 0;
	height: 1.2rem;
	border: 1px solid #CCC;
	border-left: 0;
	border-right: 0;
	padding: 0.3rem;
	font-size:0.85rem;
}

.search-box-right {
	appearance: none;
	-webkit-appearance: none;
	margin: 0;
	box-sizing: content-box;
	height: 1.2rem;
	border: 1px solid #CCC;
	border-radius: 0 3px 3px 0;
	padding: 0.3rem;
	font-size:0.85rem;
}

.mainEntryTop {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	margin-bottom: 1rem;
	gap: 0.5rem;
}

.mainEntryTitle {
	font-size: 1.2rem;
	font-weight: bold;
	display: flex;
	flex-wrap: wrap;
}

.mainEntryFunctions {
	display: flex;
	align-self: start;
	flex-wrap: wrap;
	gap: 1.2rem;
	font-size: 0.75rem;
}

.mainEntryBottom {
	display: flex;
	flex-wrap: wrap;
	gap: 1rem;
	min-height: 6rem;
}

.mainEntryThumbnailContainer {
	display: flex;
	align-items: center;
	flex-wrap: wrap;
	align-items: start;
}

.mainEntryInfoContainer {
	flex: 1;
	display: flex;
}

.mainEntryInfoCategoryToggles {
	font-size: 0.75rem;
	color: #555;
	margin-right: 0.8rem;
	user-select: none;
}

.mainEntryInfos {
	flex: 1;
	display: flex;
	gap: 1.2rem;;
	flex-wrap: wrap;
	height: min-content;
	padding-left: 0.8rem;
	border-left: 1px solid #EEE;
	min-height: 72px;
}

.mainEntryInfoContainer[data-selected-category=""] .mainEntryInfos {
	display: none;
}

.inheritedInfoIcon {
	filter: invert(60%) sepia(97%) hue-rotate(180deg);
	padding: 0 2px;
}

.thumbnailContainer {
	display: flex;
	border: 1px dashed #CCCCCC;
	color: #CCCCCC;
	background-color: #F4F4F4;
	border-radius: 3px;
}

.thumbnail.exists .thumbnailContainer {
	border-style: solid;
}

.thumbnailImg {
	border-radius: 2px;
}

.thumbnail:not(:is(.exists, .inherited)) .thumbnailImg {
	visibility: hidden;
}

.thumbnail.exists .updateThumbnailButton {
	visibility: hidden;
}

.thumbnail:not(.exists) .deleteThumbnailButton {
	visibility: hidden;
}

.thumbnailButton {
	opacity: 0;
	color: #888888;
	background-color: #DDDDDD;
	position: relative;
	top: 0;
	margin-left: -1rem;
	box-sizing: border-box;
	width: 1rem;
	height: 1rem;
	border-radius: 0 3px 0 3px;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size:0.75rem;
	cursor: pointer;
}

.thumbnailButton:hover {
	opacity: 0.8;
}

.thumbnail.prepareDrop .thumbnailButton {
	opacity: 0.8;
}

.thumbnail.prepareDrop .updateThumbnailButton {
	visibility: visible !important;
}

.thumbnail.prepareDrop .deleteThumbnailButton {
	visibility: hidden !important;
}

.subEntryArea:not(.editMode) .thumbnailButton {
	display: none;
}

.statusSummary {
	display: flex;
	gap: 1rem;
}

.statusGroup {
	margin-top: 1rem;
	margin-bottom: 1rem;
}

.statusGroupLabel {
	align-self: center;
	justify-self: center;
	font-size: 0.7rem;
	color: #444;
	padding: 0 0.2rem;
	margin-top: 0.2rem;
	min-width: max-content;
}

.statusGroupChart {
	display: flex;
	height: 0.8rem;
	border-radius: 1rem;
	overflow: auto;
	border: 1px solid #EEE;
	user-select: none;
}

.statusCounter {
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 0.6rem;
	min-width: max-content;
	padding: 0 6px;
	color: #444;
	gap: 0.2rem;
}

.statusCounter:hover {
	cursor: pointer;
}

{{range $entType, $status := $.PossibleStatus}}
.statusGroup[data-entry-type="{{$entType}}"] .statusCounter[data-status=""] {
	color: #AAA;
}

.statusSummary[data-selected="1"][data-selected-entry-type="{{$entType}}"][data-selected-status=""] .statusGroup[data-entry-type="{{$entType}}"] .statusCounter[data-status=""] {
	color: black;
	background-color: white;
}

{{range $s := $status}}
.statusGroup[data-entry-type="{{$entType}}"] .statusCounter[data-status="{{$s.Name}}"] {
	background-color: {{setAlphaToColor $s.Color 0.4}};
}

.statusSummary[data-selected="1"][data-selected-entry-type="{{$entType}}"][data-selected-status="{{$s.Name}}"] .statusGroup[data-entry-type="{{$entType}}"] .statusCounter[data-status="{{$s.Name}}"] {
	color: white;
	background-color: {{$s.Color}};
}
{{end}}
{{end}}

.subEntryTypeBar {
	display: flex;
	align-items: center;
	flex-wrap: wrap;
	row-gap: 0.5rem;
	column-gap: 2rem;
	margin-top: 1rem;
	margin-bottom: 1rem;
}

.subEntryTypeLabel {
	font-size: 1.2rem;
}

.subEntryTypeBar > form > :is(input, select, button) {
	appearance: none;
	-webkit-appearance: none;
	box-sizing: border-box;
	margin: 0;
	height: 1.3rem;
	font-size: 0.8rem;
	padding: 0.05rem 0.3rem;;
	-webkit-padding: 0 0.3rem;
	border: 1px solid #DDD;
	border-radius: 2px;
}

.subEntryTypeBar > form > :is(button, input[type="checkbox"]) {
	background-color: #E8E8E8;
	cursor: pointer;
}

.subEntryTypeBar > form > select {
	background-color: #DDD;
	cursor: pointer;
}

#sort_desc_cb {
	display: block;
	background-repeat: no-repeat;
	background-position: center center;
	background-size: 0.5rem 0.5rem;
	-webkit-appearance: none;
	border: 1px solid #DDD
}

#sort_desc_cb:not(:checked) {
	background-image: url("/asset/down-arrow.svg");
}

#sort_desc_cb:checked {
	background-image: url("/asset/up-arrow.svg");
}

.infoTop {
	display: flex;
	border: 1px solid #EEE;
	border-radius: 4px;
	background-color: #FEFEFE;
	padding: 0 1px;
}

.infoTitle {
	flex: 1;
	display: flex;
	align-items: center;
	font-size: 0.75rem;
	color: #AAAAAA;
	padding: 1px;
	border-radius: 2px;
	border: 1px solid transparent;
}

.mainEntry .infoTitle {
	cursor: pointer;
	padding: 2px 1px 1px 1px;
}

.subEntryArea.editMode .infoTitle:hover {
	background-color: #F4F4F4;
	border: 1px solid #D0D0D0;
	cursor: pointer;
}

.subEntryArea.editMode .infoTitle.active {
	border: 1px solid #AAAAAA;
	background-color: #FAFAFA;
}

.infoValue {
	padding: 1px;
	font-size: 0.8rem;
	overflow-wrap: break-word;
}

.infoValue.invalid {
	color: rgba(150, 15, 15, 0.7);
}

.infoValue > div {
	padding-bottom: 0.3rem;
}

.subEntryArea {
	flex: 1;
	background-color: #FAFAFA;
	padding: 1.5rem;
	padding-bottom: 16rem;
}

.subEntryListExpander {
	width: 10px;
	padding: 2px;
	margin-right: 0.5rem;
}

.subEntryListExpander:hover {
	filter: invert(50%) sepia(100%) hue-rotate(180deg) saturate(3);
}

.subEntryListContainer[data-expanded=""] .subEntryListExpander {
	rotate: -90deg;
}

.subEntryListContainer[data-expanded="1"] .subEntryListExpander {
	rotate: 0deg;
}

.subEntryListFrom {
	position: sticky;
	top: 0;
	border-bottom: 1px dashed #DDD;
	padding: 0.5rem 0;
	background-color: #FAFAFA;
	z-index: 1;
	font-size: 0.83rem;
	font-weight: bold;
	display: flex;
	align-items: center;
}

.subEntryListFrom .statusDot {
	margin-left: 0.3rem;
	width: 0.5rem;
	height: 0.5rem;
}

.subEntryListFrom > a {
	margin-left: 0.1rem;
	margin-right: 0.2rem;
	display: flex;
	align-items: center;
}

.subEntryList {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(110px, 1fr));
	margin: 1.5rem 0 3rem 0;
	border: 1px solid #DDDDDD;
	border-radius: 4px;
	background-color: #F4F4F4;
	gap: 1px;
	overflow: hidden;
}

.subEntryArea .subEntryListContainer[data-expanded=""] .subEntryList {
	display: none;
}

.subEntryArea.editMode .subEntryList {
	border: 1px solid #D0D0D0;
}

.subEntryListOptions {
	height: 1.5rem;
	border: 1px solid #DDD;
	border-radius: 4px;
	padding: 1px;
	overflow: clip;
	display:flex;
	gap:1px;
	background-color: #EEE;
}

.subEntryListOption {
	width: 1.5rem;
	border: 1px solid #E4E4E4;
	border-radius: 3px;
	background-color: #FAFAFA;
	box-sizing:border-box;
	display: flex;
	justify-content: center;
	align-items: center;
	background-origin: content-box;
	background-repeat: no-repeat;
	background-position-x: center;
	background-position-y: center;
}

.subEntryListOption:not([data-disabled="1"]):hover {
	border: 1px solid #E4E4E4;
	background-color: white;
	cursor: pointer;
}

.subEntryListOption[data-disabled="1"] {
	opacity: 0.3;
}

.subEntryListOption.expandOption {
	background-image: url("/asset/down-arrow.svg");
	background-size: 10px;
}

.subEntryListOption.expandOption[data-value=""] {
	rotate: 270deg;
}

.subEntryListOption.viewOption img {
	width: 0.8rem;
}

.subEntryListOption.viewOption:not([data-value=""]) .normalViewOption {
	display: none;
}

.subEntryListOption.viewOption:not([data-value="thumbnail"]) .thumbnailViewOption {
	display: none;
}

.subEntryListOption.groupByOption {
	width: auto;
}

.subEntry {
	display: flex;
	flex-direction: column;
	justify-content: start;
	gap: 0.4rem;
	padding: 0.6rem;
	background-color: #FAFAFA;
	outline: 1px solid #DDD;
}

.subEntry.expanded {
	grid-column: 1 / -1;
}

.subEntryArea.editMode .subEntry {
	outline: 1px solid #D0D0D0;
}

.subEntryArea.editMode .subEntry {
	background-color: #EEEEEE;
}

.subEntryArea.editMode .subEntry.lastClicked.selected {
	box-shadow: inset 1px 0 #88AADD;
}

.subEntryArea.editMode .subEntry.lastClicked:not(.selected) {
	box-shadow: inset 1px 0 #D0D0D0;
}

.subEntryArea.editMode .subEntry.selected {
	outline: 1px solid #88AADD;
	background-color: #EEFAFF;
}

.subEntryTop {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	gap: 0.3rem;
}


.subEntryName {
	font-weight:bold;
	overflow-wrap:anywhere;
	padding-left: 2px;
	text-decoration: none;
	display: flex;
}

.subEntryName:hover {
	text-decoration: underline;
}

.subEntryBottom {
	flex: 1;
	gap: 1.2rem;
	display: flex;
	flex-wrap: wrap;
	align-items: stretch;
	justify-content: start;
	color: black;
}

.subEntryBottomLeft {
	width: 98px;
	display: flex;
	flex-direction: column;
}

.thumbnailViewExpander {
	width: 0.4rem;
	height: 0.4rem;
	padding: 2px;
	align-self: flex-end;
	filter: invert(95%);
	user-select: none;
}

.thumbnailViewExpander:hover {
	filter: invert(70%) sepia(100%) hue-rotate(180deg) saturate(2);
}

.subEntry:not(:hover) .thumbnailViewExpander {
	visibility: hidden;
}

.subEntryProperties {
	flex:1;
	display:flex;
	flex-wrap:wrap;
	gap:1rem;
}

.subEntry:not(.expanded) .subEntryProperties {
	display: none;
}

.subEntryInfo {
	width: 12rem;
}

.subEntryInfoTop {
	display: flex;
	font-size: 0.75rem;
	justify-content: center;
	align-items: center;
	color: #AAA;
	gap: 0.5rem;
}

.subEntryInfoHistoryLink {
	color: #DDD;
	border-radius: 2px;
	font-weight: bold;
	border: 1px solid #FFF0;
	font-size: 0.5rem;
	// Due to the font-size difference, I had to manually match it's height to
	// .subEntryInfo.infoTitle with padding.
	padding: 0.2rem 0.2rem 0.1rem 0.2rem;
}

.subEntryInfoHistoryLink:hover {
	color: #AAA;
	text-decoration: none !important;
	border: 1px solid #EEE;
}

.subEntryArea.editMode .subEntryInfoHistoryLink:hover {
	background-color: #FAFAFA;
	border: 1px solid #D0D0D0;
}

.subEntryInfo:not(:hover) .subEntryInfoHistoryLink {
	visibility: hidden;
}

.prevNextLink {
	color: #AAA;
}

.prevNextLink:not(.disabled):hover {
	color: #44A;
}

.pathLink {
	color: #44A;
}

.pathText {
	word-break: break-word;
}

.pathText:hover {
	text-decoration: underline;
	cursor: pointer;
}

.parentLink {
	font-size: 0.7rem;
	background-color: #EEE;
	padding: 2px 3px;
	border-radius: 2px;
	align-self: start;
	color: #444;
}

.archivedLabel {
	padding: 2px 4px;
	border-radius: 2px;
	background-color: #268;
	font-size: 0.8rem;
	color: white;
}

.statusDot {
	width: 0.75rem;
	height: 0.75rem;
	border: 1px solid #DDD;
	border-radius: 0.6rem;
	margin-bottom: 0.1rem;
	background-color: {{setAlphaToColor "#DDD" 0.8}};
	flex-shrink: 0;
}

.mainEntry .statusDot {
	width: 0.8rem;
	height: 0.8rem;
	align-self: center;
}

.statusSelector {
	cursor: pointer;
}

.subEntryArea:not(.editMode) .statusDot {
	cursor: default;
}

{{range $entType, $status := $.PossibleStatus}}
{{range $s := $status}}
.statusDot[data-entry-type="{{$entType}}"][data-value="{{$s.Name}}"] {
	background-color: {{setAlphaToColor $s.Color 0.8}} !important;
	border: 1px solid {{$s.Color}} !important;
}
{{end}}
{{end}}

.summaryDot {
	width: auto;
	height: auto;
	border-radius: 7px;
	padding: 0.1rem 0.3rem;
	font-size: 0.6rem;
	color: #444;
	background-color: {{setAlphaToColor "#DDD" 0.6}};
	cursor: default;
	word-wrap: anywhere;
	user-select: none;
}

.grandSubEntries {
	display: flex;
	gap: 0.1rem;
	margin: 0.3rem 0.1rem 0.1rem 0.1rem;
	flex-wrap: wrap;
}

.subEntryArea:not(.editMode) .summaryDot.grandSubAdderLoader {
	visibility: hidden;
}

.grandSubArea:not(:hover) .summaryDot.grandSubAdderLoader {
	visibility: hidden;
}

.summaryDot.grandSubAdderLoader:not(:hover) {
	cursor: pointer;
	background-color: transparent;
	outline: 1px solid #E0E0E0;
	outline-offset: -1px;
	color: #DDD;
}

.summaryDot.grandSubAdderLoader:hover {
	cursor: pointer;
}

.grandSubArea.adding .grandSubAdderLoader {
	display: none;
}

.grandSubEntries:not(.addable) .grandSubAdderLoader {
	display: none;
}

.grandSubAdder {
	flex: 1;
	display: flex;
	gap: 0.2rem;
}

.grandSubArea:not(.adding) .grandSubAdder {
	display: none;
}

{{range $entType, $status := $.PossibleStatus}}
{{range $s := $status}}
.statusColor[data-entry-type="{{$entType}}"][data-status="{{$s.Name}}"] {
	background-color: {{$s.Color}};
}

.summaryDot[data-entry-type="{{$entType}}"][data-value="{{$s.Name}}"] {
	background-color: {{setAlphaToColor $s.Color 0.6}} !important;
	border: none !important;
}
{{end}}
{{end}}

.infoCategoryToggle {
	width: fit-content;
	display: flex;
	align-items: stretch;
	border-radius: 2px;
	cursor: pointer;
}

.infoCategoryToggle:hover {
	background-color: #EEE;
}

.mainEntryInfoContainer[data-selected-category="property"] .infoCategoryToggle[data-category="property"] {
	background-color:#E0EEEE;
}

.mainEntryInfoContainer[data-selected-category="environ"] .infoCategoryToggle[data-category="environ"] {
	background-color:#E0EEEE;
}

.mainEntryInfoContainer[data-selected-category="access"] .infoCategoryToggle[data-category="access"] {
	background-color:#E0EEEE;
}

.mainEntryInfoContainer[data-selected-category=""] .mainEntryInfo {
	display: none;
}

.mainEntryInfoContainer[data-selected-category="property"] .mainEntryInfo:not([data-category="property"]) {
	display: none;
}

.mainEntryInfoContainer[data-selected-category="environ"] .mainEntryInfo:not([data-category="environ"]) {
	display: none;
}

.mainEntryInfoContainer[data-selected-category="access"] .mainEntryInfo:not([data-category="access"]) {
	display: none;
}

.mainEntryInfoContainer[data-selected-category="property"]:not([data-show-hidden="1"]) .mainEntryInfo.hiddenProperty {
	display: none;
}

.infoSelector {
	padding: 0.3rem;
	border-radius: 2px 0 0 2px;
}

.infoAdder {
	padding: 0.3rem;
	border-radius: 0 2px 2px 0;
	color: #999;
}

.infoAdder:hover {
	color: #555;
}

.propertyExpander {
	width: 5px;
	padding: 0.3rem;
	background-image: url("/asset/down-arrow.svg");
	background-size: contain;
	background-origin: content-box;
	background-repeat: no-repeat;
	background-position-y: center;
	filter: opacity(40%);
}

.mainEntryInfoContainer[data-show-hidden="1"] .propertyExpander {
	background-image: url("/asset/up-arrow.svg");
}

.mainEntryInfo {
	width: 12rem;
}

.infoContextMenuLoader {
	user-select: none;
	padding: 3px 4px 0 4px;
	font-size:0.75rem;
	color:#DDD;
	border-radius:2px;
	opacity:0.5;
	cursor:pointer;
}

.mainEntryInfo:not(:hover) .infoContextMenuLoader {
	visibility: hidden;
}

.hiddenPropertyIcon {
	width: 9px;
	height: 9px;
	padding: 1px 2px 0 0;
	background-image: url("/asset/moon.svg");
	background-size: contain;
	background-repeat: no-repeat;
	transform: rotate(30deg);
	background-origin: content-box;
	filter: invert(60%) sepia(97%) hue-rotate(180deg) opacity(70%);
}

.infoContextMenuLoader:hover {
	color:#AAA;
}

.valueInput {
	max-height: 140px;
}

.updatingMarker {
	animation-duration: 1s;
	animation-name: rotating;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
}

@keyframes rotating {
	from {
		transform: rotate(0turn);
	}
	to {
		transform: rotate(1turn);
	}
}

#statusBar.error {
	color: #A22;
}

.dialogBackground {
	position: absolute;
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	background-color: rgba(255,255,255,0.4);
}

.dialog {
	display: flex;
	flex-direction: column;
	border-radius: 3px;
	width: 24rem;
	min-height: 16rem;
	border: 1px solid #CCC;
	box-shadow: 0 0 30px rgba(128,128,128,0.3);
	background-color: #F8F8F8;
}

.dialog .title {
	font-size: 1.1rem;
	height: 1.3rem;
	padding: 0.5rem;
	border-radius: 2px 2px 0 0;
	background-color: #A22;
	color: white;"
}

.dialog .content {
	flex: 1;
	padding: 1rem;
	background-color: #F8F8F8;
	color: #222;
}

.dialog .buttonBar {
	padding: 0.3rem;
	border-top: 1px solid #CCC;
	border-radius: 0 0 2px 2px;
	background-color: #EEE;
	display: flex;
	justify-content: right;
	gap: 0.3rem;
}

.dialog .button {
	height: 2rem;
	width: 4.5rem;
	border: 1px solid #AAA;
	border-radius: 2px;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 0.85rem;
	color: #222;
	cursor: pointer;
}

.dialog .confirmButton {
	background-color: #F8F4F4;
	color:#A22;
}

.dialog .confirmButton:hover {
	background-color: #F8E0E0;
}

.dialog .cancelButton {
	background-color: #F8F8F8;
}

.dialog .cancelButton:hover {
	background-color: #F0F0F0;
}

.assigneeInput {
	width: 96px;
	box-sizing: border-box;
	font-size: 0.7rem;
	padding: 2px;
	background-color: transparent;
	border: 1px solid rgba(0, 0, 0, 0);
}

.subEntryArea.editMode .assigneeInput:focus {
	background-color: #FFFFFF;
}

.subEntryArea:not(.editMode) .assigneeInput:focus {
	outline: none;
}

.assigneeInput::placeholder {
	color: #BBB;
}

.recentlyUpdatedDot {
	align-self: start;
	width: 3px;
	height: 3px;
	border-radius:2px;
	margin: 1px;
	background-color: #CC8888;
}

.recentlyUpdatedDot.forEntry {
	width: 4px;
	height: 4px;
}

#userAutoCompleteMenu {
	position: absolute;
	width: 96px;
	box-sizing: border-box;
	display: flex;
	flex-direction: column;
	gap: 1px;
	border: 1px solid #777;
	border-radius: 2px;
	background-color: #E0E0E0;
	font-size: 0.6rem;
	word-wrap: break-word;
}

.userAutoCompleteItem {
	background-color: #EEE;
}

.userAutoCompleteItem.active {
	background-color: #D0D0D0;
}

.updatePropertyPopup {
	position: absolute;
	box-sizing: border-box;
	display: none;
	z-index: 1;
	gap: 3px;
}

{{range $entType, $status := $.PossibleStatus}}
.main[data-current-select-status-menu="{{$entType}}"] .updatePropertyPopup[data-entry-type="{{$entType}}"] {
	display: flex;
}
{{end}}

.selectStatusMenu {
	display: flex;
	flex-direction: column;
	height: min-content;
	width: 8rem;
	gap: 1px;
	border: 1px solid #AAAAAA;
	border-radius: 4px;
	background-color: #E0E0E0;
	font-size: 0.8rem;
	word-wrap: break-word;
}

.selectStatusMenuItem {
	display: flex;
	background-color: #FFFFFF;
	cursor: pointer;
}

.selectStatusMenuItem:hover {
	display: flex;
	background-color: #AACCFF;
}

.selectStatusMenuItem:first-child {
	border-radius: 3px 3px 0 0;
}

.selectStatusMenuItem:last-child {
	border-radius: 0 0 3px 3px;
}

.selectStatusMenuItemDot {
	margin: 0.3rem;
}

.selectStatusMenuItemValue {
	margin: 0.35rem 0.3rem 0.3rem 0.3rem;
}

.propertyPicker {
	width: min-content;
	height: min-content;
	// min-width: 12rem;
	border: 1px solid #AAAAAA;
	border-radius: 4px;
	background-color: #E0E0E0;
	overflow: auto;
}

.updatePropertyPopup[data-sub=""] .propertyPicker {
	display: none;
}

.propertyPickerName {
	-webkit-appearance: none;
	appearance: none;
	margin: 0;
	border: 0;
	border-bottom: 1px solid #E0E0E0;
	border-radius: 0;
	padding: 0.3rem 0.5rem;
	font-size: 0.8rem;
	background-color: #EEF8FA;
}

@-moz-document url-prefix() {
  .propertyPickerName {
    padding: 0.3rem;
  }
}

.propertyPickerName[data-value=""] {
	color: #BBB;
	background-color: #EEE;
	width: 1.5rem;
}

.propertyPickerName:not([data-value=""]) {
	width: 100%;
	min-width: 12rem;
}

.propertyPickerName[data-modified="1"] {
	background-color: #FAF0CB;
}

.propertyPickerName[data-error="1"] {
	background-color: #FFD0D0;
}

.propertyPickerName:focus {
	outline: none;
}

.propertyPickerName option {
	color: black;
	background-color: white;
}

.propertyPickerName option[value=""] {
	color: #BBB;
}

.propertyPickerValue {
	-webkit-appearance: none;
	appearance: none;
	box-sizing: border-box;
	width: 100%;
	height: 100%;
	min-width: 12rem;
	min-height: 6rem;
	flex: 1;
	margin: 0;
	border: 0;
	padding: 0.5rem;
	font-size: 0.8rem;
	font-family: sans-serif;
	background-color: #FAFAFA;
	vertical-align: top;
}

.propertyPickerValue:disabled {
	display: none;
}

.propertyPickerValue:focus {
	outline: none;
	background-color: white;
}

#statusLabel {
	position: absolute;
	border: 1px solid #AAAAAA;
	border-radius: 4px;
	color: #222222;
	background-color: #FAFAFA;
	padding: 0.2rem 0.4rem 0.1rem 0.4rem;
	font-size: 0.8rem;
	opacity: 0.9;
	z-index: 1;
}

.infoModifier {
	background-color: #F9F9F9;
	border-top: 1px solid #BBB;
}

.infoModifierTopBar {
	display: flex;
	justify-content: space-between;
	padding: 0.5rem;
}

.infoModifier .closeButton {
	border-radius: 3px;
	width: 1rem;
	height: 1rem;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 0.5rem;
	cursor: pointer;
}
