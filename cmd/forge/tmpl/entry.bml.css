// html { filter: grayscale(100%) }

.flexSpacer {
	flex: 1;
}

.left {
	background-color: #FAFAFA;
	border-right: 1.5px solid #EEE;
	width: 16rem;
}

.left.hideSideMenu {
	width: 0;
}

#sideMenu {
	position: sticky;
	top: 0;
}

#sideMenuHideButton {
	border-radius: 0 0 1rem 0;
	border-right: 1px solid #ddd;
	border-bottom: 1px solid #ddd;
	background-color: #FAFAFA;
	padding: 0.2rem;
	width: 1.4rem;
	display: flex;
	justify-content: start;
	align-items: center;
	height: 0.8rem;
	font-size: 0.5rem;
	cursor: pointer;
	position: absolute;
	user-select: none;
	opacity: 0.2;
	z-index: 1;
}

#sideMenuHideButton:hover {
	opacity: 1;
}

#sideMenuHideButton > div {
	margin-left: 0.2rem;
}

.left.hideSideMenu #sideMenuHide {
	display: none;
}

.left:not(.hideSideMenu) #sideMenuShow {
	display: none;
}

#sideMenuContent {
	padding-top: 1rem;
}

.left.hideSideMenu #sideMenuContent {
	display: none;
}

.pinnedPathLink:hover {
	text-decoration: underline;
}

#pinnedPathDeleteButton {
	border-radius: 0.1rem;
	border: 1px solid #DDD;
	padding: 0 0.1rem;
	font-size: 0.7rem;
	color:#DDD;
	background-color: inherit;
}

#pinnedPathDeleteButton.prepareDrop {
	color: #A22;
	border: 1px solid #A22;
}

#searchArea {
	display: flex;
	flex-wrap: wrap;
	row-gap: 1rem;
	padding: 1.5rem 1.2rem;
	background-color: #F4F4F4;
	border-bottom: 1.5px solid #EEE;
}

.quickSearchLink:hover {
	text-decoration: underline;
}

#quickSearchDeleteButton {
	border-radius: 0.1rem;
	border: 1px solid #DDD;
	padding: 0 0.1rem;
	font-size: 0.7rem;
	color:#DDD;
	background-color: inherit;
}

#quickSearchDeleteButton.prepareDrop {
	color: #A22;
	border: 1px solid #A22;
}

#searchTypeSelect {
	appearance: none;
	-webkit-appearance: none;
	margin: 0;
	box-sizing: content-box;
	height: 1.2rem;
	border: 1px solid #CCC;
	border-radius: 3px 0 0 3px;
	padding: 0.3rem;
	font-size:0.85rem;
	cursor: pointer;
}

#searchTypeSelect.notEffected {
	color: #666;
	text-decoration-line: line-through;
}

#searchInput {
	appearance: none;
	-webkit-appearance: none;
	box-sizing: content-box;
	margin: 0;
	height: 1.2rem;
	border: 1px solid #CCC;
	border-left: 0;
	border-right: 0;
	padding: 0.3rem;
	font-size:0.85rem;
}

#searchButton {
	display: flex;
	justify-content: center;
	align-items: center;
	margin: 0;
	border: 1px solid #CCC;
	border-radius: 0 3px 3px 0;
	padding: 0.35rem;
	font-family: sans-serif;
	font-size:0.8rem;
	cursor: pointer;
}

.showSearches {
	margin-top: 1rem;
	gap: 0.1rem;
}

.mainEntryTop {
	display: flex;
	flex-wrap: wrap;
	align-items: baseline;
	margin-bottom: 1rem;
	gap: 0.5rem;
}

.mainEntryTitle {
	font-size: 1.2rem;
	font-weight: bold;
	display: flex;
	flex-wrap: wrap;
}

.copyCurrentPathButton {
	background-image: url("/asset/copy-path.svg");
	background-repeat: no-repeat;
	background-position: center center;
	background-size: 1rem 1rem;
	filter: invert(100%) brightness(7%) invert(100%);
	width: 1.3rem;
	height: 1.3rem;
	cursor: pointer;
}

.copyCurrentPathButton:hover {
	filter: invert(100%) brightness(45%) sepia(100%) hue-rotate(15deg) invert(100%);
}

.mainEntryFunctions {
	display: flex;
	align-self: start;
	flex-wrap: wrap;
	gap: 1.2rem;
	font-size: 0.75rem;
}

.mainEntryBottom {
	display: flex;
	flex-wrap: wrap;
	gap: 1rem;
	min-height: 6rem;
}

.mainEntryThumbnailContainer {
	display: flex;
	align-items: center;
	flex-wrap: wrap;
	align-items: start;
}

.mainEntryInfoContainer {
	display: flex;
}

.mainEntryInfoCategoryToggles {
	font-size: 0.75rem;
	color: #555;
	user-select: none;
}

.mainEntryInfos {
	flex: 1;
	display: flex;
	gap: 1.2rem;;
	flex-wrap: wrap;
	height: min-content;
	padding-left: 0.8rem;
	border-left: 1px solid #EEE;
	min-height: 72px;
}

.mainEntryInfoContainer[data-selected-category=""] .mainEntryInfos {
	display: none;
}

.inheritedInfoIcon {
	filter: invert(60%) sepia(97%) hue-rotate(180deg);
	padding: 0 2px;
}

.thumbnail {
	display: flex;
}

.thumbnailContainer {
	display: flex;
	border: 1px dashed #CCCCCC;
	color: #CCCCCC;
	background-color: #F4F4F4;
	border-radius: 3px;
	flex: 1;
	justify-content: center;
}

.thumbnail.exists .thumbnailContainer {
	border-style: solid;
}

.thumbnailImg {
	border-radius: 2px;
	width: 128px;
	height: 72px;
}

.subEntry .thumbnailImg {
	border-radius: 2px;
	width: 96px;
	height: 54px;
}

.detailView .subEntry .thumbnailImg {
	width: 128px;
	height: 72px;
}

.thumbnail:not(:is(.exists, .inherited)) .thumbnailImg {
	visibility: hidden;
}

.thumbnail.exists .updateThumbnailButton {
	visibility: hidden;
}

.thumbnail:not(.exists) .deleteThumbnailButton {
	visibility: hidden;
}

.thumbnailButton {
	opacity: 0;
	color: #888888;
	background-color: #DDDDDD;
	position: relative;
	top: 0;
	margin-left: -1rem;
	box-sizing: border-box;
	width: 1rem;
	height: 1rem;
	border-radius: 0 3px 0 3px;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size:0.75rem;
	cursor: pointer;
}

.thumbnailButton:hover {
	opacity: 0.8;
}

.thumbnail.prepareDrop .thumbnailButton {
	opacity: 0.8;
}

.thumbnail.prepareDrop .updateThumbnailButton {
	visibility: visible !important;
}

.thumbnail.prepareDrop .deleteThumbnailButton {
	visibility: hidden !important;
}

.subEntryArea:not(.editMode) .thumbnailButton {
	display: none;
}

.statusSummary {
	display: flex;
	gap: 1rem;
}

.statusGroup {
	display:flex;
	flex-direction:column;
	margin: 0.3rem 0.1rem 0.1rem 0.1rem;
}

.statusGroupLabel {
	align-self: center;
	justify-self: center;
	font-size: 0.7rem;
	color: #444;
	padding: 0 0.2rem;
	margin-top: 0.2rem;
	min-width: max-content;
}

.statusGroupChart {
	display: flex;
	height: 0.8rem;
	border-radius: 1rem;
	overflow: auto;
	user-select: none;
}

.statusGroupChart.sub {
	height: 0.4rem;
}

.statusCounter {
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 0.6rem;
	min-width: max-content;
	padding: 0 6px;
	color: #444;
	gap: 0.2rem;
}

.statusCounter:hover {
	cursor: pointer;
}

.statusCounter.sub {
	padding: 0;
}

.statusCounter.sub:hover {
	cursor: initial;
}

.subStatusCounterText {
	font-size: 0.6rem;
	color: #aaa;
	text-align: end;
	margin-top: 0.05rem;
}

{{range $entType, $status := $.PossibleStatus}}
.statusGroup[data-entry-type="{{$entType}}"] .statusCounter[data-status=""] {
	color: #AAA;
	background-color: #DDD8;
}

.statusSummary[data-selected="1"][data-selected-entry-type="{{$entType}}"][data-selected-status=""] .statusGroup[data-entry-type="{{$entType}}"] .statusCounter[data-status=""] {
	color: black;
	background-color: white;
}

{{range $s := $status}}
.statusGroup[data-entry-type="{{$entType}}"] .statusCounter[data-status="{{$s.Name}}"] {
	background-color: {{setAlphaToColor $s.Color 0.4}};
}

.statusSummary[data-selected="1"][data-selected-entry-type="{{$entType}}"][data-selected-status="{{$s.Name}}"] .statusGroup[data-entry-type="{{$entType}}"] .statusCounter[data-status="{{$s.Name}}"] {
	color: white;
	background-color: {{$s.Color}};
}
{{end}}
{{end}}

.subEntryTags {
	margin: 0.5rem 0;
}

.subEntryFunctions {
	font-size: 0.7rem;
	display: flex;
	margin: 0.5rem 0 1.5rem 0;
	gap: 0.7rem;
}

#forAddExcelFile {
	color: #666;
}

#forAddExcelFile:hover {
	color: #a22;
}

#forUpdateExcelFile {
	color: #666;
}

#forUpdateExcelFile:hover {
	color: #00c;
}

#downloadAsExcelButton {
	display: inline-block;
	cursor: pointer;
	color: #666;
}

#downloadAsExcelButton:hover {
	color: #00c;
}

.subEntryTypeBar {
	display: flex;
	align-items: center;
	flex-wrap: wrap;
	row-gap: 0.5rem;
	column-gap: 2rem;
	margin-top: 1rem;
	margin-bottom: 1rem;
}

.subEntryTypeLabel {
	font-size: 1.2rem;
}

.subEntryTypeBar > form > :is(input, select, button) {
	appearance: none;
	-webkit-appearance: none;
	box-sizing: border-box;
	margin: 0;
	height: 1.3rem;
	font-size: 0.8rem;
	padding: 0.05rem 0.3rem;;
	-webkit-padding: 0 0.3rem;
	border: 1px solid #DDD;
	border-radius: 2px;
}

.subEntryTypeBar > form > :is(button, input[type="checkbox"]) {
	background-color: #E8E8E8;
	cursor: pointer;
}

.subEntryTypeBar > form > select {
	background-color: #DDD;
	cursor: pointer;
}

#sort_desc_cb {
	display: block;
	background-repeat: no-repeat;
	background-position: center center;
	background-size: 0.5rem 0.5rem;
	-webkit-appearance: none;
	border: 1px solid #DDD
}

#sort_desc_cb:not(:checked) {
	background-image: url("/asset/down-arrow.svg");
}

#sort_desc_cb:checked {
	background-image: url("/asset/up-arrow.svg");
}

.infoTop {
	display: flex;
	border: 1px solid #EEE;
	border-radius: 4px;
	background-color: #FEFEFE;
	padding: 0 1px;
	overflow: auto;
}

.infoTitle {
	flex: 1;
	display: flex;
	align-items: center;
	font-size: 0.75rem;
	color: #AAAAAA;
	padding: 1px;
	border-radius: 2px;
	border: 1px solid transparent;
	user-select: none;
}

.mainEntry .infoTitle {
	cursor: pointer;
	padding: 2px 1px 1px 1px;
}

.subEntryArea.editMode .infoTitle:hover {
	background-color: #F4F4F4;
	border: 1px solid #D0D0D0;
	cursor: pointer;
}

.subEntryArea.editMode .infoTitle.active {
	border: 1px solid #AAAAAA;
	background-color: #FAFAFA;
}

.infoValue {
	padding: 1px;
	font-size: 0.8rem;
	overflow-wrap: break-word;
	overflow: auto;
	scrollbar-width: thin;
	scrollbar-color: #ddd transparent;
}

.subEntryArea .infoValue {
	max-height: 10rem;
}

.subEntryArea.expandProperty .infoValue {
	max-height: none;
}

.infoValue.expand {
	max-height: none;
}

.infoValue.invalid {
	color: rgba(150, 15, 15, 0.7);
}

.infoValue > div {
	padding-bottom: 0.3rem;
}

.subEntryArea {
	flex: 1;
	background-color: #FAFAFA;
	padding: 1.5rem 1.2rem;
	padding-bottom: 16rem;
}

.subEntryListContainer.hidden {
	display: none;
}

.subEntryListExpander {
	width: 10px;
	padding: 2px;
	margin-right: 0.5rem;
}

.subEntryListExpander:hover {
	filter: invert(50%) sepia(100%) hue-rotate(180deg) saturate(3);
}

.subEntryListContainer[data-hide="1"] .subEntryListExpander {
	rotate: -90deg;
}

.subEntryListContainer[data-hide=""] .subEntryListExpander {
	rotate: 0deg;
}

.subEntryListFrom {
	position: sticky;
	top: 0;
	border-bottom: 1px dashed #DDD;
	padding: 0.5rem 0;
	background-color: #FAFAFA;
	z-index: 1;
	font-size: 0.83rem;
	font-weight: bold;
	display: flex;
	align-items: center;
}

.subEntryListFrom .statusDot {
	margin-left: 0.3rem;
	width: 0.5rem;
	height: 0.5rem;
}

.subEntryListFrom > a {
	margin-left: 0.1rem;
	margin-right: 0.2rem;
	display: flex;
	align-items: center;
}

.subEntryList {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(115px, 1fr));
	margin: 1.5rem 0 3rem 0;
	border: 1px solid #DDDDDD;
	border-radius: 4px;
	background-color: #F4F4F4;
	gap: 1px;
	overflow: hidden;
}

.detailView .subEntryList {
	grid-template-columns: repeat(auto-fill, minmax(145px, 1fr));
}

.subEntryListContainer[data-hide="1"] .subEntryList {
	display: none;
}

.subEntryArea.editMode .subEntryList {
	border: 1px solid #D0D0D0;
}

.subEntryListOptions {
	position: sticky;
	top: 0;
	height: 1.6rem;
	border: 1px solid #DDD;
	border-radius: 4px;
	padding: 3px;
	overflow: clip;
	display:flex;
	gap: 0.2rem;
	background-color: #EEE;
	margin-bottom: 1rem;
	z-index: 1;
}

.subEntryListSeparator {
	border-right: 1px solid #DDDDDD;
	margin: 0 0.2rem;
}

.subEntryListOption {
	width: 1.6rem;
	border: 1px solid #E4E4E4;
	border-radius: 3px;
	background-color: #FAFAFA;
	box-sizing:border-box;
	display: flex;
	justify-content: center;
	align-items: center;
	background-origin: content-box;
	background-repeat: no-repeat;
	background-position-x: center;
	background-position-y: center;
}

.subEntryListOption:not([data-disabled="1"]):hover {
	border: 1px solid #E4E4E4;
	background-color: white;
	cursor: pointer;
}

.subEntryListOption[data-disabled="1"] {
	opacity: 0.3;
}

.subEntryListOption.viewOption img {
	width: 0.8rem;
}

.subEntryListOption.viewOption:not([data-value=""]) .normalViewOption {
	display: none;
}

.subEntryListOption.viewOption:not([data-value="thumbnail"]) .thumbnailViewOption {
	display: none;
}

.subEntryListOption.editModeOption {
	background-image: url("/asset/edit-mode.svg");
	background-size: 0.85rem;
}

.subEntryArea.editMode .subEntryListOption.editModeOption {
	background-color: #eefaff;
	border: 1px solid #88AADD;
}

.subEntryListOption.expandPropertyOption {
	background-image: url("/asset/shrink-property.svg");
	background-size: 0.9rem;
}

.subEntryListOption.expandPropertyOption[data-expand="true"] {
	background-image: url("/asset/expand-property.svg");
}

.subEntryListOption.detailViewOption {
	background-image: url("/asset/compact-view.svg");
	background-size: 1.4rem;
}

.subEntryListOption.detailViewOption:not([data-value=""]) {
	background-image: url("/asset/detail-view.svg");
}

.subEntryArea:not(.editMode) .subEntryListOption.deleteEntryOption {
	display: none;
}

.subEntryListOption.deleteEntryOption {
	background-image: url("/asset/delete-entry-d.svg");
	background-size: 0.80rem;
}

.subEntryListOption.deleteEntryOption:hover {
	background-image: url("/asset/delete-entry.svg");
}


.subEntryListOption.groupByOption {
	width: auto;
}

.subEntryArea.editMode .subEntryListOption.groupByOption {
	display: none;
}

.subEntry {
	display: flex;
	flex-direction: column;
	justify-content: start;
	gap: 0.4rem;
	padding: 0.6rem;
	background-color: #FAFAFA;
	outline: 1px solid #DDD;
}

.subEntry.highlight {
	background-color: #EEFAFF !important;
}

.subEntry.hidden {
	display: none;
}

.subEntry.expanded {
	grid-column: 1 / -1;
}

.subEntryArea.editMode .subEntry {
	outline: 1px solid #D0D0D0;
}

.subEntryArea.editMode .subEntry {
	background-color: #EEEEEE;
}

.subEntryArea.editMode .subEntry.lastClicked.selected {
	box-shadow: inset 1px 0 #88AADD;
}

.subEntryArea.editMode .subEntry.lastClicked:not(.selected) {
	box-shadow: inset 1px 0 #D0D0D0;
}

.subEntryArea.editMode .subEntry.selected {
	outline: 1px solid #88AADD;
	background-color: #EEFAFF;
}

.subEntryTop {
	display: flex;
	align-items: baseline;
}


.subEntryName {
	font-weight:bold;
	overflow-wrap:anywhere;
	padding-left: 2px;
	text-decoration: none;
	display: inline;
	margin-left: 0.3rem;
}

.subEntryName:hover {
	text-decoration: underline;
}

.subEntryBottom {
	flex: 1;
	gap: 1.2rem;
	display: flex;
	flex-wrap: wrap;
	align-items: stretch;
	justify-content: start;
	color: black;
}

.subEntryBottomLeft {
	flex: 0;
	display: flex;
	flex-direction: column;
}

.thumbnailViewExpander {
	width: 0.45rem;
	height: 0.45rem;
	padding: 2px;
	align-self: flex-end;
	filter: invert(90%);
	user-select: none;
	cursor: pointer;
}

.thumbnailViewExpander:hover {
	filter: invert(70%) sepia(100%) hue-rotate(180deg) saturate(2.5);
}

.subEntry:not(:hover) .thumbnailViewExpander {
	visibility: hidden;
}

.subEntryProperties {
	flex:1;
	display:grid;
	grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr));
	grid-auto-rows: min-content;
	flex-wrap:wrap;
	gap:1rem;
}

.subEntry:not(.expanded) .subEntryProperties {
	display: none;
}

.subEntryInfoTop {
	display: flex;
	font-size: 0.75rem;
	justify-content: center;
	align-items: center;
	color: #AAA;
	gap: 0.5rem;
}

.subEntryInfoHistoryLink {
	color: #DDD;
	border-radius: 2px;
	font-weight: bold;
	border: 1px solid #FFF0;
	font-size: 0.65rem;
	// Due to the font-size difference, I had to manually match it's height to
	// .subEntryInfo.infoTitle with padding.
	padding: 0.15rem 0.2rem 0rem 0.2rem;
}

.subEntryInfoHistoryLink:hover {
	color: #AAA;
	text-decoration: none !important;
	border: 1px solid #e8e8e8;
}

.subEntryArea.editMode .subEntryInfoHistoryLink:hover {
	background-color: #FAFAFA;
	border: 1px solid #D0D0D0;
}

.subEntryInfo:not(:hover) .subEntryInfoHistoryLink {
	visibility: hidden;
}

.prevNextLink {
	color: #AAA;
}

.prevNextLink:not(.disabled):hover {
	color: #44A;
}

.pathLink {
	color: #44A;
}

.pathText {
	word-break: break-word;
}

.pathText:hover {
	text-decoration: underline;
	cursor: pointer;
}

.searchLink {
	display: inline-block;
	border-radius: 2px;
	border: 1px solid #cbb;
	margin: 2px;
	padding: 1px 3px !important;
	background-color: #faeee8;
	font-size: 0.7rem;
	color: #544;
	word-wrap: anywhere;
	cursor: pointer;
	user-select: none;
}

.tagLink {
	display: inline-block;
	border-radius: 2px;
	border: 1px solid #ccc;
	margin: 2px;
	padding: 1px 3px !important;
	background-color: #eef0fa;
	font-size: 0.7rem;
	color: #444;
	word-wrap: anywhere;
	cursor: pointer;
	user-select: none;
}

.tagLink:hover {
	text-decoration: none;
}

.entryLink {
	display: block;
	color: #aaa;
}

.entryLink:hover {
	text-decoration: none;
	color:#44a;
}

.entryLink:before {
	content: "→ ";
}

.entryLink:hover:before {
	content: "→ ";
}

.externalLinkContainer {
	display: flex;
	align-items: start;
	gap: 0.3rem;
}

.externalLinkIcon {
	background-image: url("/asset/external-link.svg");
	background-repeat: no-repeat;
	background-position: center center;
	background-size: 0.9rem 0.9rem;
	filter: invert() brightness(40%) sepia(100%) hue-rotate(180deg) contrast(3) grayscale(100%);
	width: 1rem;
	height: 1rem;
	cursor: pointer;
}

.externalLinkContainer:hover .externalLinkIcon {
	filter: invert() brightness(35%) sepia(100%) hue-rotate(180deg) contrast(3);
}

.externalLink {
	color: #666;
	flex: 1;
	overflow-wrap: anywhere;
	word-break: break-all;
}

.externalLinkContainer:hover .externalLink {
	color: #468;
}

.parentLink {
	font-size: 0.7rem;
	background-color: #EEE;
	padding: 2px 3px;
	border-radius: 2px;
	align-self: start;
	color: #444;
}

.archivedLabel {
	padding: 2px 4px;
	border-radius: 2px;
	background-color: #268;
	font-size: 0.8rem;
	color: white;
}

.statusDot {
	width: 0.75rem;
	height: 0.75rem;
	border: 1px solid #DDD;
	border-radius: 0.6rem;
	margin: 1px 0;
	background-color: {{setAlphaToColor "#DDD" 0.8}};
	flex-shrink: 0;
}

.mainEntry .statusDot {
	width: 0.8rem;
	height: 0.8rem;
	margin: 2px 0;
}

.statusSelector {
	cursor: pointer;
}

.subEntryArea:not(.editMode) .statusDot {
	cursor: default;
}

{{range $entType, $status := $.PossibleStatus}}
{{range $s := $status}}
.statusDot[data-entry-type="{{$entType}}"][data-value="{{$s.Name}}"] {
	background-color: {{setAlphaToColor $s.Color 0.8}} !important;
	border: 1px solid {{$s.Color}} !important;
}
{{end}}
{{end}}

.summaryDot {
	width: max-content;
	height: auto;
	border-radius: 7px;
	padding: 0.1rem 0.3rem;
	font-size: 0.6rem;
	color: #444;
	background-color: {{setAlphaToColor "#DDD" 0.6}};
	cursor: default;
	word-wrap: anywhere;
	user-select: none;
}

.summaryDot.my:before {
	content: "@";
}

.summaryDot.nonDirect.grandSubEntry {
	border-radius: 6px;
	padding: 0.1rem 0.25rem;
	font-size: 0.5rem;
	opacity: 0.9;
	align-self: end;
	margin-left: 0.1rem;
}

.subInfoArea {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 1px;
}

.flexBreakLine {
	flex-basis: 100%;
	height: 0;
}

.grandSubEntries {
	display: flex;
	flex-wrap: wrap;
	font-size: 0.6rem;
	gap: 0.2rem 0.1rem;
	padding: 0.1rem;
	margin-top: 0.3rem;
}

.detailView .grandSubEntries {
	flex-direction: column;
}

.grandSubGroup {
	display: flex;
	flex-wrap: wrap;
}

.detailView .grandSubGroup {
	flex-direction: column;
}

.detail.grandSubGroup {
	width: 100%;
}

.grandSub {
	display: flex;
	align-items: center;
}

.grandSub.nonDirect {
	margin-top: 0.15rem;
}

.grandSubEntry.highlight {
	outline: 1px solid #88aadd;
}

.detailView .grandSub.nonDirect::before {
	color: #ddd;
	content: "L";
	text-vertical-align:top;
}

.subEntryArea:not(.editMode) .grandSubAdderLoader {
	visibility: hidden;
}

.grandSubArea:not(:hover) .grandSubAdderLoader {
	visibility: hidden;
}

.grandSubAdderLoader {
	margin-left: 0.1rem;
}

.grandSubAdderLoader:not(:hover) {
	cursor: pointer;
	background-color: transparent;
	outline: 1px solid #E0E0E0;
	outline-offset: -1px;
	color: #DDD;
}

.grandSubAdderLoader:hover {
	cursor: pointer;
}

.grandSubArea.adding .grandSubAdderLoader {
	display: none;
}

.grandSubEntries:not(.addable) .grandSubAdderLoader {
	display: none;
}

.grandSubAdder {
	width: auto;
	display: flex;
	gap: 0.2rem;
}

.grandSubArea:not(.adding) .grandSubAdder {
	display: none;
}

{{range $entType, $status := $.PossibleStatus}}
{{range $s := $status}}
.statusColor[data-entry-type="{{$entType}}"][data-status="{{$s.Name}}"] {
	background-color: {{$s.Color}};
}

.summaryDot[data-entry-type="{{$entType}}"][data-value="{{$s.Name}}"] {
	background-color: {{setAlphaToColor $s.Color 0.6}} !important;
	border: none !important;
}
{{end}}
{{end}}

.linkedEntryArea:not(:empty) {
	margin-top: 1rem;
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}

.keyshotArea {
	display: flex;
	gap: 0.3rem;
	flex-wrap: wrap;
}

.keyshotHeader {
	flex: 0 0 100%;
	display: flex;
}

.keyshotIcon {
	width: 0.9rem;
	height: 0.9rem;
	background-image: url("/asset/key.svg");
	background-size: contain;
	background-origin: content-box;
	background-repeat: no-repeat;
	background-position-y: center;
	filter: invert(100%) brightness(50%);
}

.keyshotLink {
	font-size: 0.55rem;
	display: flex;
	gap: 0.2rem;
	outline: 1px solid #ddd;
	border-radius: 0.34rem;
	padding: 1px 4px;
	margin: 1px;
	align-items: center;
	min-width: 0;
	cursor: pointer;
}

.keyshotLink.fail {
	color: #aaa;
}

.keyshotStatus {
	width: 0.25rem !important;
	height: 0.25rem !important;
	border-radius: 0.25rem;
	border: 1px solid #ccc;
}

.assetArea {
	display: flex;
	gap: 0.3rem;
	flex-wrap: wrap;
}

.assetHeader {
	flex: 0 0 100%;
}

.assetIcon {
	width: 0.8rem;
	height: 0.8rem;
	background-image: url("/asset/asset.svg");
	background-size: contain;
	background-origin: content-box;
	background-repeat: no-repeat;
	background-position-y: center;
	filter: invert(100%) brightness(60%);
}

.assetLink {
	font-size: 0.55rem;
	display: flex;
	gap: 0.2rem;
	outline: 1px solid #ddd;
	border-radius: 0.34rem;
	padding: 1px 4px;
	margin: 1px;
	align-items: center;
	min-width: 0;
	cursor: pointer;
}

.assetLink.fail {
	color: #888;
}

.assetStatus {
	width: 0.25rem !important;
	height: 0.25rem !important;
	border-radius: 0.25rem;
	border: 1px solid #ccc;
}

.copyable.highlight {
	outline: 1px solid #88aadd;
}

.infoCategoryToggle {
	width: fit-content;
	display: flex;
	align-items: stretch;
	border-radius: 2px;
	cursor: pointer;
}

.infoCategoryToggle:hover {
	background-color: #EEE;
}

.mainEntryBottom[data-selected-category="property"] .infoCategoryToggle[data-category="property"] {
	background-color:#E0EEEE;
}

.mainEntryBottom[data-selected-category="environ"] .infoCategoryToggle[data-category="environ"] {
	background-color:#E0EEEE;
}

.mainEntryBottom[data-selected-category="access"] .infoCategoryToggle[data-category="access"] {
	background-color:#E0EEEE;
}

.mainEntryBottom[data-selected-category=""] .mainEntryInfo {
	display: none;
}

.mainEntryBottom[data-selected-category="property"] .mainEntryInfo:not([data-category="property"]) {
	display: none;
}

.mainEntryBottom[data-selected-category="environ"] .mainEntryInfo:not([data-category="environ"]) {
	display: none;
}

.mainEntryBottom[data-selected-category="access"] .mainEntryInfo:not([data-category="access"]) {
	display: none;
}

.mainEntryBottom[data-selected-category="property"]:not([data-show-hidden="1"]) .mainEntryInfo.hiddenProperty {
	display: none;
}

.infoSelector {
	padding: 0.3rem;
	border-radius: 2px 0 0 2px;
}

.infoAdder {
	padding: 0.3rem;
	border-radius: 0 2px 2px 0;
	color: #999;
}

.infoAdder:hover {
	color: #555;
}

.showHiddenProperty {
	width: 5px;
	padding: 0.3rem;
	background-image: url("/asset/down-arrow.svg");
	background-size: contain;
	background-origin: content-box;
	background-repeat: no-repeat;
	background-position-y: center;
	filter: opacity(40%);
}

.mainEntryBottom[data-show-hidden="1"] .showHiddenProperty {
	background-image: url("/asset/up-arrow.svg");
}

.mainEntryInfo {
	width: 12rem;
}

.infoContextMenuLoader {
	user-select: none;
	padding: 3px 4px 0 4px;
	font-size:0.75rem;
	color:#DDD;
	border-radius:2px;
	opacity:0.5;
	cursor:pointer;
}

.mainEntryInfo:not(:hover) .infoContextMenuLoader {
	visibility: hidden;
}

.hiddenPropertyIcon {
	width: 9px;
	height: 9px;
	padding: 1px 2px 0 0;
	background-image: url("/asset/moon.svg");
	background-size: contain;
	background-repeat: no-repeat;
	transform: rotate(30deg);
	background-origin: content-box;
	filter: invert(60%) sepia(97%) hue-rotate(180deg) opacity(70%);
}

.infoContextMenuLoader:hover {
	color:#AAA;
}

.valueInput {
	max-height: 140px;
}

.updatingMarker {
	animation-duration: 1s;
	animation-name: rotating;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
}

@keyframes rotating {
	from {
		transform: rotate(0turn);
	}
	to {
		transform: rotate(1turn);
	}
}

#scrollToTop {
	position: fixed;
	right: 1.5rem;
	bottom: 1.8rem;
	width: 1.8rem;
	height: 2.7rem;
	z-index: 1;
	border-radius: 0.2rem;
	border: 0.08rem solid #444;
	background-color: #fafafa;
	background-image: url("/asset/scroll-to-top.svg");
	background-repeat: no-repeat;
	background-position: center center;
	background-size: 1rem 1rem;
	opacity: 0;
}

#statusBar.error {
	color: #A22;
}

.dialogBackground {
	position: fixed;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	background-color: rgba(255,255,255,0.4);
	z-index: 1;
}

.dialogBackground.invisible {
	display: none;
}

.dialog {
	display: flex;
	flex-direction: column;
	border-radius: 3px;
	width: 24rem;
	height: 16rem;
	border: 1px solid #CCC;
	box-shadow: 0 0 30px rgba(128,128,128,0.3);
	background-color: #F8F8F8;
}

.dialog .title {
	font-size: 1.1rem;
	height: 1.3rem;
	padding: 0.5rem;
	border-radius: 2px 2px 0 0;
	background-color: #A22;
	color: white;"
}

.dialog .content {
	flex: 1;
	padding: 1rem;
	background-color: #F8F8F8;
	color: #222;
	overflow: auto;
}

.dialog .buttonBar {
	padding: 0.3rem;
	border-top: 1px solid #CCC;
	border-radius: 0 0 2px 2px;
	background-color: #EEE;
	display: flex;
	justify-content: right;
	gap: 0.3rem;
}

.dialog .button {
	height: 2rem;
	width: 4.5rem;
	border: 1px solid #AAA;
	border-radius: 2px;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 0.85rem;
	color: #222;
	cursor: pointer;
}

.dialog .confirmButton {
	background-color: #F8F4F4;
	color:#A22;
}

.dialog .confirmButton:hover {
	background-color: #F8E0E0;
}

.dialog .cancelButton {
	background-color: #F8F8F8;
}

.dialog .cancelButton:hover {
	background-color: #F0F0F0;
}

.assigneeInput {
	width: 0;
	flex: 1;
	box-sizing: border-box;
	font-size: 0.7rem;
	padding: 2px;
	background-color: transparent;
	border: 1px solid rgba(0, 0, 0, 0);
}

.assigneeInput.my {
	text-decoration: 2px underline #ffbbbb;
}

.gsInfo {
	flex: 1;
	display: none;
	justify-content: space-between;
	align-items: center;
	font-size: 0.6rem;
	margin-left: 0.3rem;
	color: #444;
}

.detailView .gsInfo {
	display: flex;
}

.assigneeLabel.my {
	text-decoration: 2px underline #ffbbbb;
}

.dueLabel {
	font-size: 0.6rem;
	padding: 0 2px;
	border-radius: 1px;
	user-select: none;
}

.subInfoArea .dueLabel {
	margin: 2px 0;
}

.subEntryArea:not(.editMode) .dueLabel {
	cursor: pointer;
}

.subEntryArea:not(.editMode) .dueLabel:hover {
	text-decoration: underline;
}

.dueLabel.dueComming {
	background-color: #ffcccc;
}

.dueLabel.hidden {
	visibility: hidden;
}

.subEntryArea.editMode .assigneeInput:focus {
	background-color: #FFFFFF;
}

.subEntryArea:not(.editMode) .assigneeInput:focus {
	outline: none;
}

.assigneeInput::placeholder {
	color: #BBB;
}

.recentlyUpdatedDot {
	align-self: start;
	width: 3px;
	height: 3px;
	border-radius:2px;
	margin: 1px;
	background-color: #CC8888;
}

.recentlyUpdatedDot.forEntry {
	width: 4px;
	height: 4px;
	min-width: 4px;
	min-height: 4px;
	margin-left: 0.1rem;
}

#userAutoCompleteMenu {
	position: absolute;
	width: 96px;
	box-sizing: border-box;
	display: flex;
	flex-direction: column;
	gap: 1px;
	border: 1px solid #777;
	border-radius: 2px;
	background-color: #E0E0E0;
	font-size: 0.6rem;
	word-wrap: break-word;
}

.userAutoCompleteItem {
	background-color: #EEE;
}

.userAutoCompleteItem.active {
	background-color: #D0D0D0;
}

#updatePropertyPopup {
	position: absolute;
	box-sizing: border-box;
	display: none;
	z-index: 1;
	gap: 3px;
}

#updatePropertyPopup.expose {
	display: flex;
}

.selectStatusMenu {
	display: flex;
	flex-direction: column;
	height: min-content;
	width: 8rem;
	gap: 1px;
	border: 1px solid #AAAAAA;
	border-radius: 4px;
	background-color: #E0E0E0;
	font-size: 0.8rem;
	word-wrap: break-word;
	overflow: clip;
}

.selectStatusMenu.hidden {
	display: none;
}

.selectStatusMenuItem {
	display: flex;
	background-color: #FFFFFF;
	cursor: pointer;
}

.selectStatusMenuItem:hover {
	display: flex;
	background-color: #AACCFF;
}

.selectStatusMenuItem:first-child {
	border-radius: 3px 3px 0 0;
}

.selectStatusMenuItem:last-child {
	border-radius: 0 0 3px 3px;
}

.selectStatusMenuItemDot {
	margin: 0.3rem;
}

.selectStatusMenuItemValue {
	margin: 0.35rem 0.3rem 0.3rem 0.3rem;
}

.propertyPicker {
	position: relative;
	width: min-content;
	height: min-content;
	// min-width: 12rem;
	border: 1px solid #AAAAAA;
	border-radius: 4px;
	background-color: #E0E0E0;
	overflow: auto;
}

.propertyPickerName {
	-webkit-appearance: none;
	appearance: none;
	margin: 0;
	border: 0;
	border-bottom: 1px solid #E0E0E0;
	border-radius: 0;
	padding: 0.3rem 0.45rem;
	font-size: 0.8rem;
	background-color: #EEF8FA;
}

.propertyPickerHistory {
	position: absolute;
	top: 0;
	right: 0;
	margin-right: 0.5rem;
	cursor: pointer;
	color: #aaa;
}

.propertyPickerHistory:hover {
	color: black;
}

.propertyPickerHistory.hidden {
	display: none;
}

@-moz-document url-prefix() {
  .propertyPickerName[data-value=""] {
    padding: 0.3rem 0.45rem;
  }
}

.propertyPickerName[data-value=""] {
	color: #BBB;
	background-color: #EEE;
	width: 1.5rem;
}

.propertyPickerName:not([data-value=""]) {
	width: 100%;
	min-width: 12rem;
}

.propertyPickerName[data-modified="1"] {
	background-color: #FAF0CB;
}

.propertyPickerName[data-error="1"] {
	background-color: #FFD0D0;
}

.propertyPickerName:focus {
	outline: none;
}

.propertyPickerName option {
	color: black;
	background-color: white;
}

.propertyPickerName option[value=""] {
	color: #BBB;
}

.propertyPickerValue {
	-webkit-appearance: none;
	appearance: none;
	box-sizing: border-box;
	width: 100%;
	height: 100%;
	min-width: 12rem;
	min-height: 6rem;
	width: 24rem;
	height: 12rem;
	flex: 1;
	margin: 0;
	border: 0;
	padding: 0.5rem;
	font-size: 0.8rem;
	font-family: sans-serif;
	background-color: #FAFAFA;
	vertical-align: top;
}

.propertyPickerValue:disabled {
	display: none;
}

.propertyPickerValue:focus {
	outline: none;
	background-color: white;
}

#statusLabel {
	position: absolute;
	border: 1px solid #AAAAAA;
	border-radius: 4px;
	color: #222222;
	background-color: #FAFAFA;
	padding: 0.2rem 0.4rem 0.1rem 0.4rem;
	font-size: 0.8rem;
	opacity: 0.9;
	z-index: 1;
}

.infoModifier {
	background-color: #F9F9F9;
	border-top: 1px solid #BBB;
}

.infoModifierTopBar {
	display: flex;
	justify-content: space-between;
	padding: 0.5rem;
}

.infoModifier .closeButton {
	border-radius: 3px;
	width: 1rem;
	height: 1rem;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 0.5rem;
	cursor: pointer;
}

